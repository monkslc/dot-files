set number
set ruler
set autowrite

set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab

set expandtab

" fix backspace
set backspace=indent,eol,start

" For better hot module reloading
set backupcopy=yes

" global undo buffer
set undofile
set undodir=/tmp

" Needed for autoformatting in Rust
filetype plugin on

"Color Scheme
syntax on
set background=dark
colo monotone

set hlsearch

set statusline=
set statusline+=%f
set statusline+=\ %l:%c

"linting
let g:ale_linters_explicit = 0

let g:ale_linters = {
\   'rust': ['cargo', 'rls', 'clippy'],
\   'javascript': ['eslint'],
\   'javascriptreact': ['eslint'],
\   'typescript': ['eslint', 'tsserver'],
\   'typescriptreact': ['eslint', 'tsserver'],
\}

let g:ale_fixer_aliases = {
\  'typescriptreact': 'typescript',
\  'javascriptreact': 'javascript',
\}

let g:ale_fixers = {
\  '*': ['remove_trailing_lines', 'trim_whitespace'],
\  'javascript': ['prettier', 'eslint'],
\  'javascriptreact': ['prettier', 'eslint'],
\  'typescript': ['prettier', 'eslint'],
\  'typescriptreact': ['prettier', 'eslint'],
\  'rust': ['rustfmt'],
\}

let g:ale_rust_cargo_check_tests = 1
let g:ale_rust_cargo_use_clippy = 1
let g:ale_fix_on_save = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_enter = 0
inoremap <silent> <C-N> <C-\><C-O>:ALEComplete<CR>

command D ALEGoToDefinition
command I ALEHover
command T ALEGoToTypeDefinition
command E ALEDetail
command C ALEReset
command Imp ALEOrganizeImports
command Rename ALERename

" ctrlp
set runtimepath^=~/.vim/bundle/ctrlp.vim

" Ctrlp ignore node modules
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|target/'
